/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

*,
:before,
:after {
  box-sizing: border-box;
  margin: 0; }

html {
  -webkit-font-smoothing: antialiased; }

body {
  position: relative;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  font-family: "museo", sans-serif;
  color: #000;
  text-align: center;
  background-color: #fff; }

.grid {
  max-width: 80em;
  margin-left: auto;
  margin-right: auto; }
  .grid::after {
    clear: both;
    content: "";
    display: block; }

.js .load {
  transform: translateY(2rem) translateZ(0);
  opacity: 0;
  transition: none; }

.is-loaded .load {
  transform: translateY(0) translateZ(0);
  opacity: 1; }

.is-loaded .load-1 {
  transition: opacity 0.2s ease 0.3s, transform 0.3s cubic-bezier(0.46, 0.88, 0.43, 1.41) 0.3s; }

.is-loaded .load-2 {
  transition: opacity 0.2s ease 0.5s, transform 0.3s cubic-bezier(0.46, 0.88, 0.43, 1.41) 0.5s; }

h1, h2, h3, h4, h5, h6 {
  margin: 0; }

.h-l {
  font: 1.5em "museo", sans-serif; }
  @media screen and (min-width: 48em) {
    .h-l {
      font-size: 3em; } }

.h-m {
  font: 1.3125em "museo", sans-serif; }
  @media screen and (min-width: 48em) {
    .h-m {
      font-size: 2.25em; } }

.h-s {
  font: 1.125em "museo", sans-serif; }
  @media screen and (min-width: 48em) {
    .h-s {
      font-size: 1.5em; } }

.t-l {
  font: 1.3125em "museo", sans-serif; }
  @media screen and (min-width: 48em) {
    .t-l {
      font-size: 2em; } }

.t-m {
  font: 1.125em "museo", sans-serif; }
  @media screen and (min-width: 48em) {
    .t-m {
      font-size: 1.25em; } }

.t-s {
  font: 1em "museo", sans-serif; }

.btn {
  display: inline-block; }

.nav {
  position: fixed;
  top: 0;
  bottom: 0;
  width: 50%;
  overflow: hidden;
  background: none;
  border: none;
  outline: none;
  white-space: nowrap;
  text-indent: 110%;
  cursor: pointer; }
  .nav:hover, .nav:active, .nav:focus, .nav:visited {
    outline: none;
    background: none;
    border: none;
    box-shadow: none; }
  .nav--prev {
    left: 0; }
    .nav--prev:hover {
      cursor: url(../images/arrows/arrow-left-4.svg), default; }
  .nav--next {
    right: 0; }
    .nav--next:hover {
      cursor: url(../images/arrows/arrow-4.svg), default; }

.menu {
  position: fixed;
  top: 0;
  left: 1%;
  bottom: 0;
  display: none; }
  .js .menu {
    opacity: 0;
    transition: opacity 0.5s ease; }
    @media screen and (min-width: 48em) and (min-height: 48em) {
      .js .menu {
        display: -ms-flexbox;
        display: flex; } }
  .menu.is-active {
    opacity: 1; }
  .menu__list {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-pack: center;
        justify-content: center;
    margin: 0;
    padding: 0;
    list-style: none; }
  .menu__item:nth-child(1n) .menu__link {
    background-image: url(../images/dots/dot-1.svg); }
  .menu__item:nth-child(2n) .menu__link {
    background-image: url(../images/dots/dot-2.svg); }
  .menu__item:nth-child(3n) .menu__link {
    background-image: url(../images/dots/dot-3.svg); }
  .menu__item:nth-child(4n) .menu__link {
    background-image: url(../images/dots/dot-4.svg); }
  .menu__item:nth-child(5n) .menu__link {
    background-image: url(../images/dots/dot-5.svg); }
  .menu__item:nth-child(6n) .menu__link {
    background-image: url(../images/dots/dot-6.svg); }
  .menu__item:nth-child(7n) .menu__link {
    background-image: url(../images/dots/dot-7.svg); }
  .menu__item:nth-child(8n) .menu__link {
    background-image: url(../images/dots/dot-8.svg); }
  .menu__item:nth-child(9n) .menu__link {
    background-image: url(../images/dots/dot-9.svg); }
  .menu__item:nth-child(10n) .menu__link {
    background-image: url(../images/dots/dot-10.svg); }
  .menu__link {
    display: block;
    width: 3.75em;
    height: 1.5em;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 0.75em;
    opacity: 0.5;
    transition: all 0.2s ease; }
    .menu__link:focus, .menu__link:active {
      opacity: 1;
      outline: none; }
    .menu__link:hover, .menu__link.is-active {
      opacity: 1;
      transform: translateX(0.3em) translateZ(0) scale(1.3); }

.flow > * + * {
  margin-top: 1em; }

.wrapper {
  max-width: 1280px;
  max-width: 80rem;
  padding-left: 15px;
  padding-left: 0.9375rem;
  padding-right: 15px;
  padding-right: 0.9375rem; }

.wrapper--s {
  max-width: 960px;
  max-width: 60rem; }

.header.page {
  -ms-flex-pack: justify;
      justify-content: space-between; }

.header__img-top {
  width: 72.8%;
  max-width: 60.5em;
  margin-top: 2em; }
  @media screen and (min-width: 48em) {
    .header__img-top {
      width: 56%; } }

.header__img-bottom {
  width: 63.7%;
  max-width: 53.125em;
  margin-bottom: 2em; }
  @media screen and (min-width: 48em) {
    .header__img-bottom {
      width: 49%; } }

.page {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  width: 100%;
  height: 100vh;
  overflow: auto; }
  .js .page {
    display: none;
    height: auto;
    min-height: 100vh; }
    .js .page.is-active {
      display: -ms-flexbox;
      display: flex;
      opacity: 1; }
  .page__intro {
    max-width: 37.5em;
    padding: 1em;
    text-align: left; }
    .page__intro > * + * {
      margin-top: 1em; }
    .page__intro > * {
      font-size: 1.125em;
      font-weight: 500; }
      @media screen and (min-width: 48em) {
        .page__intro > * {
          font-size: 1.4375em; } }
  .page__text {
    padding: 16px;
    padding: 1rem;
    max-width: 460px;
    max-width: 28.75rem;
    font-size: 1.125em;
    font-weight: 500; }
    @media screen and (min-width: 48em) {
      .page__text {
        font-size: 1.4375em; } }
  .page__img-container {
    display: block;
    width: 100%;
    padding: 1em; }
  .page__img {
    max-width: 50%;
    transition: all 0.5s ease; }
  .page strong {
    color: #AD2C6B; }

.carousel {
  position: relative;
  width: 100%;
  height: 100vh; }

/*# sourceMappingURL=data:application/json;base64, */
